{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","todos","setTodos","inputText","setStatus","priority","setPriority","useState","toggleActiveBtn","setToggleActiveBtn","statusHandler","e","preventDefault","target","value","type","className","onChange","onClick","text","completed","id","Math","random","edit","name","disabled","undefined","Todo","todo","showEditField","map","item","filter","el","placeholder","TodoList","filteredTodos","App","status","setFilteredTodos","useEffect","filterHandler","sort","a","b","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1d8fac8c.chunk.js","sourcesContent":["import React, {useState} from 'react';\n\nconst Form = ({setInputText, todos, setTodos, inputText, setStatus, priority, setPriority}) => {\n    const [toggleActiveBtn, setToggleActiveBtn] = useState(false)\n    const inputTextHandler = (e) => {\n        setInputText(e.target.value);\n    }\n    const submitHandler = (e) => {\n        e.preventDefault();\n        setTodos([\n            ...todos, {\n                text: inputText,\n                completed: false,\n                id: Math.random() * 1000,\n                edit: false,\n                priority: priority\n            }\n        ]);\n        setInputText('');\n    }\n    const statusHandler = (e) => {\n        e.preventDefault();\n        setStatus(e.target.value);\n    }\n    const priorityHandler = (e) => {\n        setPriority(e.target.value);\n    }\n    return (\n        <form>\n            <input value={inputText} type=\"text\" className=\"todo-input\" onChange={inputTextHandler}/>\n            <button className=\"todo-button\" type=\"submit\" onClick={submitHandler}>\n                <i className=\"fas fa-plus-square\"></i>\n            </button>\n            <div className='select'>\n                <select onChange={priorityHandler} name=\"todos\" className=\"filter-todo\">\n                    <option disabled>Priority</option>\n                    <option value={1}>Low</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Urgent</option>\n                </select>\n            </div>\n            <div className=\"select\">\n                <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\n                    <option disabled>Filter</option>\n                    <option value=\"all\">All</option>\n                    <option value=\"completed\">Completed</option>\n                    <option value=\"uncompleted\">Uncompleted</option>\n                </select>\n            </div>\n            <>\n                <div>\n                    <button\n                        className={toggleActiveBtn ? 'active' : undefined}\n                        type='submit'\n                        onClick={(e) => {\n                            statusHandler(e)\n                            setToggleActiveBtn(!toggleActiveBtn)\n                        }}\n                        value='name'\n                        name='todos'\n                    >Name\n                    </button>\n                </div>\n                <div>\n                    <button\n                        type='submit'\n                        onClick={(e) => {\n                            statusHandler(e)\n                            setToggleActiveBtn(!toggleActiveBtn)\n                        }}\n                        value='priority'\n                        name='todos'\n                    >Priority\n                    </button>\n                </div>\n            </>\n        </form>\n    );\n};\n\nexport default Form;","import React from 'react';\n\nconst Todo = ({text, todos, todo, setTodos}) => {\n\n        const deleteHandler = () => {\n            setTodos(todos.filter(el => el.id !== todo.id))\n        }\n        const completeHandler = () => {\n            setTodos(todos.map(item => {\n                if (item.id === todo.id) {\n                    return {\n                        ...item, completed: !item.completed\n\n                    }\n                }\n                return item;\n            }))\n        }\n        const showEditField = () => {\n            setTodos(todos.map(item => {\n                if (item.id === todo.id) {\n                    return {\n                        ...item, edit: !item.edit\n                    }\n                }\n                return item;\n            }))\n        }\n        const editRecord = (e) => {\n            e.preventDefault();\n            setTodos(todos.map(item => {\n                if (item.id === todo.id) {\n                    return {\n                        ...item, text: e.target.value\n                    }\n                }\n                return item;\n            }))\n        }\n\n        return (\n            <>\n                <div className='todo'>\n                    {todo.priority === '1' && <div className='priority green'></div>}\n                    {todo.priority === '2' && <div className='priority orange'></div>}\n                    {todo.priority === '3' && <div className='priority red'></div>}\n                    {!todo.edit ? <>\n                            <li className={`todo-item ${todo.completed && 'completed'}`}>{text}</li>\n                            <button onClick={completeHandler} className='complete-btn'>\n                                <i className='fas fa-check'></i>\n                            </button>\n                            <button className='edit-btn' onClick={showEditField}><i className='fas fa-pen'></i></button>\n                            <button onClick={deleteHandler} className='trash-btn'>\n                                <i className='fas fa-trash'></i>\n                            </button>\n                        </>\n                        : ''}\n\n                    {todo.edit &&\n                    <form className='edit-form'>\n                        <input value={todo.text} className='edit-field' type=\"text\" placeholder='please edit your record'\n                               onChange={editRecord}/>\n                        <div>\n                            <button className=\"save-edit-btn\" onClick={showEditField}>\n                                <i className=\"fas fa-wrench\"></i>\n                            </button>\n                            <button className=\"cancel-edit-btn\" onClick={showEditField}>\n                                <i className=\"far fa-window-close\"></i>\n                            </button>\n                        </div>\n                    </form>\n                    }\n                </div>\n            </>\n        );\n    }\n;\n\nexport default Todo;","import React from 'react';\nimport Todo from \"./Todo\";\n\n    const TodoList = ({todos, setTodos,filteredTodos,inputText,setInputText, priority}) => {\n    return (\n        <div className=\"todo-container\">\n            <ul className=\"todo-list\">\n            {filteredTodos.map(todo => (\n                <Todo\n                    text={todo.text}\n                    key={todo.id}\n                    todo={todo}\n                    todos={todos}\n                    setTodos={setTodos}\n                    inputText={inputText}\n                    setInputText={setInputText}\n                    priority={priority}\n                />\n            ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default TodoList;","import React, {useState, useEffect} from \"react\";\nimport './App.css';\nimport Form from \"./components/Form\";\nimport TodoList from \"./components/TodoList\";\n\nfunction App() {\n    const [inputText, setInputText] = useState('');\n    const [todos, setTodos] = useState([]);\n    const [status, setStatus] = useState('all');\n    const [filteredTodos, setFilteredTodos] = useState([]);\n    const [priority, setPriority] = useState('1')\n\n    useEffect(() => {\n        filterHandler();\n    }, [status, todos])\n    const filterHandler = () => {\n        switch (status) {\n            case 'completed':\n                setFilteredTodos(todos.filter(todo => todo.completed));\n                break;\n            case 'uncompleted':\n                setFilteredTodos(todos.filter(todo => !todo.completed));\n                break;\n            case 'name':\n                setFilteredTodos(todos.sort(function (a,b){\n                    if (a.text > b.text){\n                        return -1;\n                    } if (a.text < b.text){\n                        return 1;\n                    }\n                    return 0;\n                }));\n                break;\n            case 'priority':\n                setFilteredTodos(todos.sort(function (a,b){\n                    if (a.priority > b.priority){\n                        return 1;\n                    } if (a.priority < b.priority){\n                        return -1;\n                    }\n                    return 0;\n                }));\n                break;\n            default:\n                setFilteredTodos(todos);\n                break;\n        }\n    }\n    return (\n        <div className=\"App\">\n            <header>\n                <h1>Vrindavan's todo list</h1>\n            </header>\n            <Form\n                setInputText={setInputText}\n                todos={todos}\n                setTodos={setTodos}\n                inputText={inputText}\n                setStatus={setStatus}\n                priority={priority}\n                setPriority={setPriority}\n            />\n            <TodoList\n                todos={todos}\n                setTodos={setTodos}\n                filteredTodos={filteredTodos}\n                inputText={inputText}\n                setInputText={setInputText}\n                priority={priority}\n            />\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}