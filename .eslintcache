[{"/Users/2mac/Desktop/github-projects/todo-app/src/index.js":"1","/Users/2mac/Desktop/github-projects/todo-app/src/App.js":"2","/Users/2mac/Desktop/github-projects/todo-app/src/reportWebVitals.js":"3","/Users/2mac/Desktop/github-projects/todo-app/src/components/Form.js":"4","/Users/2mac/Desktop/github-projects/todo-app/src/components/TodoList.js":"5","/Users/2mac/Desktop/github-projects/todo-app/src/components/Todo.js":"6"},{"size":500,"mtime":1610371405927,"results":"7","hashOfConfig":"8"},{"size":2347,"mtime":1610701394579,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1610371405929,"results":"10","hashOfConfig":"8"},{"size":2145,"mtime":1610701394579,"results":"11","hashOfConfig":"8"},{"size":714,"mtime":1610701394581,"results":"12","hashOfConfig":"8"},{"size":2718,"mtime":1610701394580,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"5nbf6m",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/2mac/Desktop/github-projects/todo-app/src/index.js",[],["28","29"],"/Users/2mac/Desktop/github-projects/todo-app/src/App.js",["30"],"import React, {useState, useEffect} from \"react\";\nimport './App.css';\nimport Form from \"./components/Form\";\nimport TodoList from \"./components/TodoList\";\n\nfunction App() {\n    const [inputText, setInputText] = useState('');\n    const [todos, setTodos] = useState([]);\n    const [status, setStatus] = useState('all');\n    const [filteredTodos, setFilteredTodos] = useState([]);\n    const [priority, setPriority] = useState('1')\n\n    useEffect(() => {\n        filterHandler();\n    }, [status, todos])\n    const filterHandler = () => {\n        switch (status) {\n            case 'completed':\n                setFilteredTodos(todos.filter(todo => todo.completed));\n                break;\n            case 'uncompleted':\n                setFilteredTodos(todos.filter(todo => !todo.completed));\n                break;\n            case 'name':\n                setFilteredTodos(todos.sort(function (a,b){\n                    if (a.text > b.text){\n                        return 1;\n                    } if (a.text < b.text){\n                        return -1;\n                    }\n                    return 0;\n                }));\n                break;\n            case 'priority':\n                setFilteredTodos(todos.sort(function (a,b){\n                    if (a.priority > b.priority){\n                        return -1;\n                    } if (a.priority < b.priority){\n                        return 1;\n                    }\n                    return 0;\n                }));\n                break;\n            default:\n                setFilteredTodos(todos);\n                break;\n        }\n    }\n    return (\n        <div className=\"App\">\n            <header>\n                <h1>Vrindavan's todo list</h1>\n            </header>\n            <Form\n                setInputText={setInputText}\n                todos={todos}\n                setTodos={setTodos}\n                inputText={inputText}\n                setStatus={setStatus}\n                priority={priority}\n                setPriority={setPriority}\n            />\n            <TodoList\n                todos={todos}\n                setTodos={setTodos}\n                filteredTodos={filteredTodos}\n                inputText={inputText}\n                setInputText={setInputText}\n                priority={priority}\n            />\n        </div>\n    );\n}\n\nexport default App;\n","/Users/2mac/Desktop/github-projects/todo-app/src/reportWebVitals.js",[],"/Users/2mac/Desktop/github-projects/todo-app/src/components/Form.js",[],"/Users/2mac/Desktop/github-projects/todo-app/src/components/TodoList.js",[],"/Users/2mac/Desktop/github-projects/todo-app/src/components/Todo.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":15,"column":8,"nodeType":"37","endLine":15,"endColumn":23,"suggestions":"38"},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'filterHandler'. Either include it or remove the dependency array.","ArrayExpression",["41"],"no-global-assign","no-unsafe-negation",{"desc":"42","fix":"43"},"Update the dependencies array to be: [filterHandler, status, todos]",{"range":"44","text":"45"},[482,497],"[filterHandler, status, todos]"]